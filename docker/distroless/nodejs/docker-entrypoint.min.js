"use strict";var T=Object.create;var g=Object.defineProperty;var V=Object.getOwnPropertyDescriptor;var W=Object.getOwnPropertyNames;var q=Object.getPrototypeOf,j=Object.prototype.hasOwnProperty;var _=(e,t)=>{for(var n in t)g(e,n,{get:t[n],enumerable:!0})},E=(e,t,n,s)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of W(t))!j.call(e,r)&&r!==n&&g(e,r,{get:()=>t[r],enumerable:!(s=V(t,r))||s.enumerable});return e};var b=(e,t,n)=>(n=e!=null?T(q(e)):{},E(t||!e||!e.__esModule?g(n,"default",{value:e,enumerable:!0}):n,e)),A=e=>E(g({},"__esModule",{value:!0}),e);var M={};_(M,{die:()=>p,fileEnv:()=>R,handleFileEnvFlag:()=>N,handleWaitServerFlag:()=>C,main:()=>D,waitServer:()=>P});module.exports=A(M);var O=b(require("child_process")),k=b(require("fs")),y=b(require("net"));function p(...e){console.error("ERROR:",...e),process.exit(1)}var B=process.env.DEBUG==="1",c=B?console.log:()=>{},x={interval:1e3,maxRetries:10},P=(e,{interval:t=x.interval,maxRetries:n=x.maxRetries}={})=>new Promise((s,r)=>{let o=0,a=Date.now(),{host:i,port:f,...u}=e,l=`${[i,f].concat(Object.entries(u).map(([d,v])=>`${d}=${JSON.stringify(v)}`)).join(":")}:`;function $(){c(`${l} connecting to server!`);let d=y.default.createConnection(e,()=>{c(`${l} connected to server!`),d.end()});d.on("data",v=>{c(`${l} data=${v}`),d.end()}),d.on("end",()=>{c(`${l} disconnected from server`),s()}),d.on("error",v=>{if(o+=1,c(`${l} #${o} failed to connect:`,v),o===n){let J=(Date.now()-a)/1e3;r(new Error(`${l} could not connect. ${o} tries, elapsed ${J} seconds`))}setTimeout($,t)})}$()}),h={exclusive:!0,failFileReadError:!0,trimFileContents:"both",required:!0};function R(e,{defaultValue:t,varFileName:n,exclusive:s=h.exclusive,failFileReadError:r=h.failFileReadError,trimFileContents:o=h.trimFileContents,required:a=h.required}={}){let{env:i}=process,f=n??`${e}_FILE`,u=i[e],m=i[f];if(c("fileEnv",{varName:e,varValue:u,varFileName:f,varFileNameValue:m}),s&&u&&m)throw new Error(`both ${e} and ${f} are set, but they are mutually exclusive!`);if(!u){if(m)try{let l=k.default.readFileSync(m,{encoding:"utf-8"});switch(o){case"both":l=l.trim();break;case"start":l=l.trimStart();break;case"end":l=l.trimEnd();break;case"none":default:break}c(`fileEnv: set ${e}=${JSON.stringify(l)}`),i[e]=l;return}catch(l){if(r)throw l}if(t!==void 0){i[e]=t;return}if(a)throw new Error(`missing environment variable ${e} (alternatively loaded from ${f})`)}}function w(e,t,n){let s=[],r=e;for(;s.length<n-1;){let o=r.indexOf(t);if(o<0)break;s.push(r.substring(0,o)),r=r.substring(o+1)}return s.push(r),s}function N(e){let[t,n]=w(e,":",2),s=n?JSON.parse(n):void 0;return R(t,s)}function C(e){let[t,n,s]=w(e,":",3),r=s?JSON.parse(s):void 0;if(!t)throw new Error("missing host, format: host:port[:options]");if(!n)throw new Error("missing port, format: host:port[:options]");let o=Number(n);return P({host:t,port:o},r)}var F=/[A-Za-z0-9_]/;function S(e){let t="",n=!1,s,r="";function o(a){let i=process.env[r];i===void 0&&a===void 0&&c(`missing env var ${r} (expanded to empty string)`),t+=i??a??"",r="",s=void 0}for(let a=0;a<e.length;a+=1){let i=e[a];if(s==="simple")F.test(i)?r+=i:i==="{"?s="braces":(a-=1,o());else if(s==="braces")if(F.test(i))r+=i;else if(i===":"&&e[a+1]==="-"){let f=e.indexOf("}",a+2);if(f<0)throw new Error(`missing '}' (variable: ${r})`);let u=e.substring(a+2,f);a=f+1,o(u)}else{if(i!=="}")throw new Error(`position ${a} '${i}' while '}' was expected (variable: ${r})`);o()}else n?(n=!1,t+=i):i==="\\"?n=!0:i==="$"?s="simple":t+=i}if(s==="simple")o();else if(s==="braces")throw new Error(`unterminated env var ${r} (missing '}')`);return t}async function D(e=process.argv){c("docker-entrypoint:",e);let t=[],n=2;for(;n<e.length;n+=1){let o=S(e[n]);if(!o.startsWith("--"))break;let[a,i]=w(o.substring(2),"=",2);if(a===""){n+=1;break}switch(a){case"file-env":i||(n+=1,i=e[n],i||p("missing --file-env value")),N(i);break;case"wait-server":i||(n+=1,i=e[n],i||p("missing --wait-server value")),t.push(C(i));break;default:p(`unknown flag ${a} (${e[n]})`)}}t.length&&(c(`waiting ${t.length} servers...`),await Promise.all(t));let s=e[n];s||p("missing javascript file to run");let r=e.slice(n+1).map(S);c("fork:",s,r),O.default.fork(s,r)}function G(){return process.argv.length===1?!1:require.main===module}G()&&D().catch(e=>p(e));0&&(module.exports={die,fileEnv,handleFileEnvFlag,handleWaitServerFlag,main,waitServer});
//! Copyright (C) 2023-2024 Gustavo Sverzut Barbieri <barbieri@profusion.mobi>
//! License: MIT
//! Source: https://github.com/barbieri/barbieri-playground/tree/master/docker/distroless/nodejs/
